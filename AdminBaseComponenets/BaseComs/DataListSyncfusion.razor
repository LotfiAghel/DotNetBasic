@typeparam TItem
@typeparam TKEY

@using Models
@using System.Collections.Generic
@using Newtonsoft.Json.Linq;
@inject NavigationManager NavManager
@using Blazorise.DataGrid
@inherits NullableInput2<IEnumerable<TItem>>

@{
    if(value!=null)
        Console.WriteLine("data size "+value.Count());
    else
        Console.WriteLine("data is null");
}

@if (itemName != null)
{
    <button class="btn btn-primary" @onclick="@ModalShow">Show Dialog!</button>
    @if (showModal)
    {
        <div class="modal fade show" id="myModal" style="display:block" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Confirm action</h4>
                <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
            </div>

            <div>@Program0.CreateDynamicComponent2(this, w, ttvalue)</div>;

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn" @onclick="@ModalCancel">Cancel</button>
                <button type="button" class="btn btn-danger" @onclick=@ModalOk>Delete</button>
            </div>

        </div>
    </div>
</div>
    }
}
<hr />



<DataGrid TItem="TItem"
        Data="@value"
        RowDoubleClicked=onClick
        Responsive
        ShowPager
        Borderless
        Resizable
        
        >
    <DataGridCommandColumn TItem="TItem" />
    
    @foreach (var prop in propertis){
                var persianLabel = prop.GetCustomFirstAttributes<Models.PersianLabel>();
                <DataGridColumn TItem="TItem" Field=@prop.Name Caption="@(persianLabel != null ? persianLabel.txt : prop.Name)" Editable="true" />
    }
</DataGrid>


