@using System.Linq
@using Microsoft.Extensions.Logging
@using ClTool
@using MyRefelctionMirror;
@inject HttpClient Http
@using System;
@using System.Net;
@using Newtonsoft.Json.Linq;
@using Newtonsoft.Json;



@using System.Collections.Generic;
@using System.ComponentModel.DataAnnotations;
@using System.ComponentModel.DataAnnotations.Schema;
@using Tools;
@using System.Net.Http;
@using System.Net.Http.Json;
@using System.Collections;

@inherits ValueInput<JToken>


  
@if(value!=null){
    Action<object> onClick2 = async (x) =>{
                                    await Click();
                                };
    if(value.Type ==JTokenType.Array){
            <div style="display: inline;"> <p style="display: inline;color:blue"  @onclick=@onClick2>[</p>
                @if(openOject){
                foreach(var line in (value as JArray)){
                    <JsonShow value=@line></JsonShow><p style="display: inline;">&emsp;,</p>
                }
                }else{
                    <p style="display: inline;color:blue"  @onclick=@onClick2>..</p>
                }
            <p style="display: inline;color:blue"  @onclick=@onClick2>]</p></div>
    } else if(value.Type == JTokenType.Object){
        
        <div style="display: inline;"><p style="display: inline;color:blue"  @onclick=@onClick2>{</p>
        @if(openOject){
            foreach(var line in (value as JObject)){
                <div style="margin-left:20px;">"@line.Key":
                    <JsonShow value=@line.Value></JsonShow>,
                </div>
            }
        }else{
            <p style="display: inline;color:blue"  @onclick=@onClick2>..</p>
        }
        <p style="display: inline;color:blue"  @onclick=@onClick2>}</p></div>
    }else if(value.Type == JTokenType.String ){
           <p style="display: inline;">
                    &emsp;"@value.ToString()"
                </p>
        }else if(value.Type == JTokenType.Integer ){
           <p style="display: inline;">
                    &emsp;@value.ToString()
                </p>
        }else if(value.Type == JTokenType.Float ){
           <p style="display: inline;">
                    &emsp;@value.ToString()f
                </p>
        }else if(value.Type == JTokenType.Boolean){
            var ph=value.ToObject<bool>()?"true":"false";
           <p style="display: inline;">
                    &emsp;@ph
                </p>
        }else if(value.Type == JTokenType.Null ){
           <p style="display: inline;">
                    &emsp;null
                </p>
        }else{
                
                <p style="display: inline;">
                    &emsp;"@value.ToString()"
        </p>

    }
}


@code {


    public bool openOject=true;
    async Task Click()
    {
       openOject=!openOject;
    }


}
